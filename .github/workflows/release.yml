name: 发布版本

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: '版本号（例如：v1.0.0）'
        required: true
        type: string

jobs:
  create-release:
    name: 创建 GitHub Release
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: 提取版本号
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "版本号: $VERSION"

    - name: 提取 CHANGELOG
      id: changelog
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        VERSION_NO_V="${VERSION#v}"

        # 从 CHANGELOG.md 提取对应版本的变更内容
        if grep -q "## \[$VERSION_NO_V\]" CHANGELOG.md; then
          CHANGELOG=$(sed -n "/## \[$VERSION_NO_V\]/,/## \[/p" CHANGELOG.md | sed '$d')
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog=自动生成的版本 $VERSION" >> $GITHUB_OUTPUT
        fi

    - name: 创建 Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-publish:
    name: 构建和发布包
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: 检出代码
      uses: actions/checkout@v5

    - name: 设置 Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: 安装构建工具
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: 构建分发包
      run: python -m build

    - name: 检查分发包
      run: twine check dist/*

    # 注释：如果要发布到 PyPI，取消下面的注释并配置 PYPI_API_TOKEN
    # - name: 发布到 PyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     password: ${{ secrets.PYPI_API_TOKEN }}

    - name: 上传构建产物到 Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
